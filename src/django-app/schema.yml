openapi: 3.0.3
info:
  title: Sayyara Automotive Matcher API
  version: 0.0.1
  description: An app to promote communcation between mechanics and customers.
paths:
  /accounts/customer/:
    get:
      operationId: accounts_customer_list
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerData'
          description: ''
    post:
      operationId: accounts_customer_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerData'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerData'
          description: ''
  /accounts/customer/{id}/:
    get:
      operationId: accounts_customer_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Customer Data.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerData'
          description: ''
    put:
      operationId: accounts_customer_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Customer Data.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerData'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerData'
          description: ''
    patch:
      operationId: accounts_customer_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Customer Data.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomerData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomerData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomerData'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerData'
          description: ''
    delete:
      operationId: accounts_customer_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Customer Data.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /accounts/employee/:
    get:
      operationId: accounts_employee_list
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeData'
          description: ''
    post:
      operationId: accounts_employee_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmployeeData'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeData'
          description: ''
  /accounts/employee/{id}/:
    get:
      operationId: accounts_employee_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Employee Data.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeData'
          description: ''
    put:
      operationId: accounts_employee_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Employee Data.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmployeeData'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeData'
          description: ''
    patch:
      operationId: accounts_employee_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Employee Data.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeData'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeData'
          description: ''
    delete:
      operationId: accounts_employee_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Employee Data.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /accounts/shop-owner/:
    get:
      operationId: accounts_shop_owner_list
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShopOwnerData'
          description: ''
    post:
      operationId: accounts_shop_owner_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopOwnerData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopOwnerData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopOwnerData'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopOwnerData'
          description: ''
  /accounts/shop-owner/{id}/:
    get:
      operationId: accounts_shop_owner_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Owner Data.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopOwnerData'
          description: ''
    put:
      operationId: accounts_shop_owner_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Owner Data.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopOwnerData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShopOwnerData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShopOwnerData'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopOwnerData'
          description: ''
    patch:
      operationId: accounts_shop_owner_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Owner Data.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShopOwnerData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShopOwnerData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShopOwnerData'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopOwnerData'
          description: ''
    delete:
      operationId: accounts_shop_owner_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop Owner Data.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /auth/jwt/create/:
    post:
      operationId: auth_jwt_create_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /auth/jwt/refresh/:
    post:
      operationId: auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /auth/jwt/verify/:
    post:
      operationId: auth_jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /auth/users/:
    get:
      operationId: auth_users_list
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserCreate'
          description: ''
    post:
      operationId: auth_users_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /auth/users/{id}/:
    get:
      operationId: auth_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
    put:
      operationId: auth_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
    patch:
      operationId: auth_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserCreate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
    delete:
      operationId: auth_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /auth/users/activation/:
    post:
      operationId: auth_users_activation_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /auth/users/me/:
    get:
      operationId: auth_users_me_retrieve
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_users_me_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_users_me_partial_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: auth_users_me_destroy
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /auth/users/resend_activation/:
    post:
      operationId: auth_users_resend_activation_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /auth/users/reset_password/:
    post:
      operationId: auth_users_reset_password_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /auth/users/reset_password_confirm/:
    post:
      operationId: auth_users_reset_password_confirm_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /auth/users/reset_username/:
    post:
      operationId: auth_users_reset_username_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /auth/users/reset_username_confirm/:
    post:
      operationId: auth_users_reset_username_confirm_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /auth/users/set_password/:
    post:
      operationId: auth_users_set_password_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /auth/users/set_username/:
    post:
      operationId: auth_users_set_username_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /quotes/quote-requests/:
    get:
      operationId: quotes_quote_requests_list
      tags:
      - quotes
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuoteRequest'
          description: ''
    post:
      operationId: quotes_quote_requests_create
      tags:
      - quotes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuoteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuoteRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteRequest'
          description: ''
  /quotes/quote-requests/{id}/:
    get:
      operationId: quotes_quote_requests_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Quote Request.
        required: true
      tags:
      - quotes
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteRequest'
          description: ''
    put:
      operationId: quotes_quote_requests_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Quote Request.
        required: true
      tags:
      - quotes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuoteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuoteRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteRequest'
          description: ''
    patch:
      operationId: quotes_quote_requests_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Quote Request.
        required: true
      tags:
      - quotes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuoteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuoteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuoteRequest'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteRequest'
          description: ''
    delete:
      operationId: quotes_quote_requests_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Quote Request.
        required: true
      tags:
      - quotes
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /quotes/quotes/:
    get:
      operationId: quotes_quotes_list
      tags:
      - quotes
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quote'
          description: ''
    post:
      operationId: quotes_quotes_create
      tags:
      - quotes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Quote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Quote'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
          description: ''
  /quotes/quotes/{id}/:
    get:
      operationId: quotes_quotes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Quote.
        required: true
      tags:
      - quotes
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
          description: ''
    put:
      operationId: quotes_quotes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Quote.
        required: true
      tags:
      - quotes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Quote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Quote'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
          description: ''
    patch:
      operationId: quotes_quotes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Quote.
        required: true
      tags:
      - quotes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuote'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
          description: ''
    delete:
      operationId: quotes_quotes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Quote.
        required: true
      tags:
      - quotes
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /shops/addresses/:
    get:
      operationId: shops_addresses_list
      tags:
      - shops
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
          description: ''
    post:
      operationId: shops_addresses_create
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
  /shops/addresses/{id}/:
    get:
      operationId: shops_addresses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Address.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    put:
      operationId: shops_addresses_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Address.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    patch:
      operationId: shops_addresses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Address.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    delete:
      operationId: shops_addresses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Address.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /shops/invitations/:
    get:
      operationId: shops_invitations_list
      tags:
      - shops
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invitation'
          description: ''
    post:
      operationId: shops_invitations_create
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invitation'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
  /shops/invitations/{invitation_key}/:
    get:
      operationId: shops_invitations_retrieve
      parameters:
      - in: path
        name: invitation_key
        schema:
          type: string
          format: uuid
          title: UUID
        description: A UUID string identifying this Invitation.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
    put:
      operationId: shops_invitations_update
      parameters:
      - in: path
        name: invitation_key
        schema:
          type: string
          format: uuid
          title: UUID
        description: A UUID string identifying this Invitation.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invitation'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
    patch:
      operationId: shops_invitations_partial_update
      parameters:
      - in: path
        name: invitation_key
        schema:
          type: string
          format: uuid
          title: UUID
        description: A UUID string identifying this Invitation.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvitation'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
    delete:
      operationId: shops_invitations_destroy
      parameters:
      - in: path
        name: invitation_key
        schema:
          type: string
          format: uuid
          title: UUID
        description: A UUID string identifying this Invitation.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /shops/shops/:
    get:
      operationId: shops_shops_list
      tags:
      - shops
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shop'
          description: ''
    post:
      operationId: shops_shops_create
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Shop'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
  /shops/shops/{id}/:
    get:
      operationId: shops_shops_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
    put:
      operationId: shops_shops_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Shop'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
    patch:
      operationId: shops_shops_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop.
        required: true
      tags:
      - shops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShop'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
    delete:
      operationId: shops_shops_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shop.
        required: true
      tags:
      - shops
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    Address:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        postal_code:
          type: string
          maxLength: 6
        street:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 255
        country:
          type: string
          maxLength: 255
        province:
          type: string
          maxLength: 10
      required:
      - city
      - country
      - id
      - postal_code
      - province
      - street
    CustomerData:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
      required:
      - id
      - user
    EmployeeData:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        salary:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
          nullable: true
        user:
          type: integer
        shop:
          type: integer
      required:
      - id
      - shop
      - user
    Invitation:
      type: object
      properties:
        invitation_key:
          type: string
          format: uuid
          readOnly: true
          title: UUID
        email:
          type: string
          format: email
          title: Email address
          maxLength: 255
        is_expired:
          type: boolean
        is_used:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        shop:
          type: integer
      required:
      - created_at
      - email
      - invitation_key
      - shop
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - token
      - uid
    PatchedAddress:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        postal_code:
          type: string
          maxLength: 6
        street:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 255
        country:
          type: string
          maxLength: 255
        province:
          type: string
          maxLength: 10
    PatchedCustomerData:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
    PatchedEmployeeData:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        salary:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
          nullable: true
        user:
          type: integer
        shop:
          type: integer
    PatchedInvitation:
      type: object
      properties:
        invitation_key:
          type: string
          format: uuid
          readOnly: true
          title: UUID
        email:
          type: string
          format: email
          title: Email address
          maxLength: 255
        is_expired:
          type: boolean
        is_used:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        shop:
          type: integer
    PatchedQuote:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        shop:
          type: integer
        quote_request:
          type: integer
        status:
          $ref: '#/components/schemas/StatusEnum'
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        estimated_time:
          type: string
          maxLength: 255
        expiry_date:
          type: string
          format: date
    PatchedQuoteRequest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        shop:
          type: array
          items:
            type: integer
        customer:
          type: integer
        preferred_date:
          type: string
          format: date
        preferred_time:
          type: string
          format: time
        description:
          type: string
          maxLength: 1000
        user:
          type: integer
          nullable: true
    PatchedShop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        shop_owner:
          type: string
        address:
          type: integer
        name:
          type: string
          title: Shop name
          maxLength: 255
        num_bays:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Number of service bays
        availability:
          type: string
          nullable: true
          title: Available hours
          maxLength: 255
        shop_hours:
          type: string
          nullable: true
          maxLength: 255
    PatchedShopOwnerData:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
    PatchedUser:
      type: object
      properties:
        email:
          type: string
          format: email
          nullable: true
          title: Email address
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeEnum'
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
    PatchedUserCreate:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
        email:
          type: string
          format: email
          nullable: true
          title: Email address
          maxLength: 255
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeEnum'
        invite_key:
          type: string
          format: uuid
          writeOnly: true
        re_password:
          type: string
    Quote:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        shop:
          type: integer
        quote_request:
          type: integer
        status:
          $ref: '#/components/schemas/StatusEnum'
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        estimated_time:
          type: string
          maxLength: 255
        expiry_date:
          type: string
          format: date
      required:
      - estimated_time
      - expiry_date
      - id
      - price
      - quote_request
      - shop
      - status
    QuoteRequest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        shop:
          type: array
          items:
            type: integer
        customer:
          type: integer
        preferred_date:
          type: string
          format: date
        preferred_time:
          type: string
          format: time
        description:
          type: string
          maxLength: 1000
        user:
          type: integer
          nullable: true
      required:
      - customer
      - description
      - id
      - shop
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_username:
          type: string
          title: Username
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - current_password
      - new_username
    Shop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        shop_owner:
          type: string
        address:
          type: integer
        name:
          type: string
          title: Shop name
          maxLength: 255
        num_bays:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Number of service bays
        availability:
          type: string
          nullable: true
          title: Available hours
          maxLength: 255
        shop_hours:
          type: string
          nullable: true
          maxLength: 255
      required:
      - address
      - id
      - name
      - shop_owner
    ShopOwnerData:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
      required:
      - id
      - user
    StatusEnum:
      enum:
      - new_quote
      - accepted
      - in_progress
      - done
      - rework
      type: string
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    TypeEnum:
      enum:
      - shop_owner
      - employee
      - customer
      type: string
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          nullable: true
          title: Email address
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeEnum'
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
      required:
      - id
      - username
    UserCreate:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
        email:
          type: string
          format: email
          nullable: true
          title: Email address
          maxLength: 255
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeEnum'
        invite_key:
          type: string
          format: uuid
          writeOnly: true
        re_password:
          type: string
      required:
      - password
      - re_password
      - username
    UsernameResetConfirm:
      type: object
      properties:
        new_username:
          type: string
          title: Username
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - new_username
  securitySchemes:
    jwtAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "JWT"
